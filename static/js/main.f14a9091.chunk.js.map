{"version":3,"sources":["redux/cartSlice.js","products.js","components/Item.js","components/Items.js","components/Navbar.js","components/AvaiableInfo.js","components/TotalSection.js","components/Cart.js","App.js","redux/store.js","index.js"],"names":["cartSlice","createSlice","name","initialState","products","id","title","description","price","img","quantity","totalItems","totalAmount","reducers","removeItem","state","action","newProducts","filter","product","payload","incrementItem","updatedProduct","map","decrementItem","clearAllItems","getTotal","reduce","a","c","updatedTotalPrice","actions","Item","dispatch","useDispatch","className","src","alt","onClick","type","placeholder","Items","Navbar","useSelector","cart","AvaiableInfo","TotalSection","window","confirm","Cart","useEffect","App","configureStore","reducer","cartReducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.f14a9091.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { products } from \"../products\";\r\nexport const cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: {\r\n    products: products,\r\n    totalItems: 0,\r\n    totalAmount: 0,\r\n  },\r\n  reducers: {\r\n    //Remove items\r\n    removeItem: (state, action) => {\r\n      const newProducts = state.products.filter(\r\n        (product) => product.id !== action.payload\r\n      );\r\n      state.products = newProducts;\r\n    },\r\n\r\n    //Increment Items\r\n    incrementItem: (state, action) => {\r\n      const updatedProduct = state.products.map((product) => {\r\n        if (product.id === action.payload) {\r\n          return { ...product, quantity: product.quantity + 1 };\r\n        }\r\n        return product;\r\n      });\r\n      return { ...state, products: updatedProduct };\r\n    },\r\n\r\n    //DecrementItems\r\n    decrementItem: (state, action) => {\r\n      let updatedProduct = state.products.map((product) => {\r\n        if (product.id === action.payload) {\r\n          return { ...product, quantity: product.quantity - 1 };\r\n        }\r\n        return product;\r\n      });\r\n      return { ...state, products: updatedProduct };\r\n    },\r\n\r\n    //clearAllItems\r\n    clearAllItems: (state) => {\r\n      return { ...state, products: [] };\r\n    },\r\n\r\n    //get total items && totlaAmount\r\n    getTotal: (state) => {\r\n      let { totalItems, totalAmount } = state.products.reduce(\r\n        (a, c) => {\r\n          let { quantity, price } = c;\r\n          let updatedTotalPrice = quantity * price;\r\n          a.totalAmount += updatedTotalPrice;\r\n          a.totalItems += quantity;\r\n          return a;\r\n        },\r\n        { totalItems: 0, totalAmount: 0 }\r\n      );\r\n      return { ...state, totalItems, totalAmount };\r\n    },\r\n  },\r\n});\r\nexport const {\r\n  removeItem,\r\n  incrementItem,\r\n  decrementItem,\r\n  clearAllItems,\r\n  getTotal,\r\n} = cartSlice.actions;\r\nexport default cartSlice.reducer;\r\n","export const products = [\r\n  {\r\n    id: 1,\r\n    title: \"Apple 10+\",\r\n    description: \"black in color\",\r\n    price: 2500,\r\n    img: \"/images/item1.jpg\",\r\n    quantity: 1,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"HeadPhone QKZ\",\r\n    description: \"black in color\",\r\n    price: 230,\r\n    img: \"/images/item2.jpg\",\r\n    quantity: 1,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"College Bag\",\r\n    description: \"blue in color\",\r\n    price: 3500,\r\n    img: \"/images/item3.jpg\",\r\n    quantity: 1,\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Watch 11\",\r\n    description: \"white in color\",\r\n    price: 90500,\r\n    img: \"/images/item4.jpg\",\r\n    quantity: 1,\r\n  },\r\n  {\r\n    id: 5,\r\n    title: \"By Cycle\",\r\n    description: \"black in color\",\r\n    price: 2500,\r\n    img: \"/images/item5.jpg\",\r\n    quantity: 1,\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport { removeItem, incrementItem, decrementItem } from \"../redux/cartSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nconst Item = ({ product }) => {\r\n  const { id, title, description, price, img, quantity } = product;\r\n  const dispatch = useDispatch();\r\n  if (quantity === 0) {\r\n    dispatch(removeItem(id));\r\n  }\r\n  return (\r\n    <div>\r\n      <div className=\"items-info\">\r\n        <div className=\"product-img\">\r\n          <img src={img} alt=\"products\" />\r\n        </div>\r\n        <div className=\"title\">\r\n          <h2>{title}</h2>\r\n          <p>{description}</p>\r\n        </div>\r\n        <div className=\"add-minus-quantity\">\r\n          <i\r\n            className=\"fas fa-minus minus\"\r\n            onClick={() => dispatch(decrementItem(id))}\r\n          ></i>\r\n          <input type=\"text\" placeholder={quantity} />\r\n          <i\r\n            className=\"fas fa-plus add\"\r\n            onClick={() => dispatch(incrementItem(id))}\r\n          ></i>\r\n        </div>\r\n        <div className=\"price\">\r\n          <h3>{price * quantity} BDT</h3>\r\n        </div>\r\n        <div className=\"remove-item\" onClick={() => dispatch(removeItem(id))}>\r\n          <i className=\"fas fa-trash-alt remove\"></i>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","import React from \"react\";\r\nimport { Scrollbars } from \"react-custom-scrollbars-2\";\r\nimport Item from \"./Item\";\r\nconst Items = ({ products }) => {\r\n  return (\r\n    <>\r\n      <div className=\"cart-items\">\r\n        <div className=\"cart-items-container\">\r\n          <Scrollbars>\r\n            {products.map((product) => (\r\n              <Item key={product.id} product={product} />\r\n            ))}\r\n          </Scrollbars>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Items;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nconst Navbar = () => {\r\n  const { totalItems } = useSelector((state) => state.cart);\r\n  return (\r\n    <>\r\n      <header>\r\n        <div className=\"continue-shopping\">\r\n          <img src=\"images/arrow.png\" alt=\"arrow\" className=\"arrow-icon\" />\r\n          <h3>continue shopping</h3>\r\n        </div>\r\n        <div className=\"cart-icon\">\r\n          <img src=\"images/cart.png\" alt=\"cart\" className=\"cart-icon\" />\r\n          <p>{totalItems}</p>\r\n        </div>\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nconst AvaiableInfo = () => {\r\n  const { totalItems } = useSelector((state) => state.cart);\r\n  return (\r\n    <>\r\n      <h1>Shopping Cart</h1>\r\n      <p className=\"total-items\">\r\n        you have <span className=\"total-items-count\">{totalItems}</span> items\r\n        in Shopping Cart\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AvaiableInfo;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { clearAllItems } from \"../redux/cartSlice\";\r\nconst TotalSection = () => {\r\n  const { totalAmount } = useSelector((state) => state.cart);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"card-total\">\r\n      <h3>\r\n        Cart Total : <span>{totalAmount} BDT</span>\r\n      </h3>\r\n      <button>checkout</button>\r\n      <button\r\n        className=\"clear-cart\"\r\n        onClick={() => {\r\n          if (window.confirm(\"Are You Sure to Delete ?\")) {\r\n            dispatch(clearAllItems());\r\n          }\r\n        }}\r\n      >\r\n        Clear Cart\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TotalSection;\r\n","import React from \"react\";\r\nimport Items from \"./Items\";\r\nimport Navbar from \"./Navbar\";\r\nimport AvaiableInfo from \"./AvaiableInfo\";\r\nimport TotalSection from \"./TotalSection\";\r\nimport \"../App.css\";\r\nimport { getTotal} from \"../redux/cartSlice\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nconst Cart = () => {\r\n  const dispatch = useDispatch();\r\n  const { products } = useSelector((state) => state.cart);\r\n  useEffect(() => {\r\n    dispatch(getTotal());\r\n  }, [products]);\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <section className=\"main-cart-section\">\r\n        <AvaiableInfo />\r\n        <Items products={products} />\r\n        <TotalSection products={products} />\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","\nimport Cart from \"./components/Cart\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Cart />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport cartReducer from \"./cartSlice\";\r\nexport default configureStore({\r\n  reducer: {\r\n    cart: cartReducer,\r\n  },\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}